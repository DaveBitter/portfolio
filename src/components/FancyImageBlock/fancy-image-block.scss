@keyframes shape-1 {
    from {
        mask: url('/img/shapes/blob-1.svg');
    }

    to {
        mask: url('/img/shapes/blob-2.svg');
    }
}

@keyframes shape-2 {
    from {
        mask: url('/img/shapes/blob-2.svg');
    }

    to {
        mask: url('/img/shapes/blob-3.svg');
    }
}

@keyframes shape-3 {
    from {
        mask: url('/img/shapes/blob-3.svg');
    }

    to {
        mask: url('/img/shapes/blob-1.svg');
    }
}

.fancy-image-block {
    position: relative;
    display: inline-flex;

    &__image-wrapper {
        mask: url('/img/shapes/blob-1.svg');
        mask-repeat: no-repeat !important;

        // animation: shape-1 5s $transition-timing-slow $transition-easing-cubic infinite alternate-reverse;

        [class^="page-transition"]:not(.page-transtion-enter-done) ~ * & {
            animation: none !important;
        }

        &:nth-of-type(2) {
            mask: url('/img/shapes/blob-2.svg');

            // animation: shape-2 5s $transition-timing-slow $transition-easing-cubic infinite alternate-reverse;
        }

        &:nth-of-type(3) {
            mask: url('/img/shapes/blob-3.svg');

            // animation: shape-3 5s $transition-timing-slow $transition-easing-cubic infinite alternate-reverse;
        }

        &--presentational {
            display: none;
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            opacity: 0.2;
            transform: translate(-$spacing-sml, -$spacing-sml);

            @include mq($mq-tab--lrg) {
                transform: translate(-$spacing-med, -$spacing-med);
            }

            @supports (mask: url('/img/shapes/blob-1.svg')) {
                display: inline-block;
            }

            &::after {
                content: '';
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                opacity: 0.7;
                background: $gradient-primary;
            }

            &:nth-of-type(2) {
                transform: translate($spacing-sml, $spacing-sml);

                @include mq($mq-tab--lrg) {
                    transform: translate($spacing-med, $spacing-med);
                }
            }
        }
    }

    &__image {
        object-fit: cover;
    }
}
